I"l<h2 id="도커">도커?</h2>

<ul>
  <li>컨테이너 안에 있는 애플리케이션 배포를 자동화하는 오픈소스 엔진</li>
  <li>
    <p>가상화된 컨테이너 실행 환경 위에 애플리케이션 배포엔진을 추가한다.</p>
  </li>
  <li>도커의 목적
    <ul>
      <li>도커는 빠르다.
        <ul>
          <li>몇 분 만에 애플리케이션을 도커화 할 수 있음</li>
        </ul>
      </li>
      <li>의무의 논리적 분리
        <ul>
          <li>컨테이너 내부에서 동작하는 애플리케이션만 집중할 수 있음.</li>
          <li>개발자가 코드를 작성할 때의 환경과 배포 실행 환경을 보장하여 일관성을 향상시킨다.
            <ul>
              <li>ex: “개발할 땐 잘됐는데 배포때 안돼!!” 를 방지!</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>빠르고 효율적 개발사이클
        <ul>
          <li>도커의 사용목적은 코드작성, 테스트, 배포까지의 시간을 줄이는 데에 있기 때문이다.</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="도커-컴포넌트">도커 컴포넌트</h2>

<ul>
  <li>도커 클라이언트와 서버
    <ul>
      <li>도커는 클라이언트 - 서버 애플리케이션이다.</li>
      <li>docker과 api로 이루어 져 있는데, 클라이언트에서 api를 통해 서버에 명령을 전달한다.</li>
      <li>마치 직접 명령하는 것 처럼 보인다.</li>
    </ul>
  </li>
  <li>
    <p>도커 이미지</p>

    <ul>
      <li>이미지에서 컨테이너를 만드는데, 이는 <code class="language-plaintext highlighter-rouge">빌드</code> 에 해당한다.</li>
      <li>여러 레이어가 나뉜 형태이며 유니온 파일 시스템을 사용함.</li>
    </ul>
  </li>
  <li>
    <p>도커 레지스트리</p>

    <ul>
      <li>도커는 커스텀 이미지를 레지스트리에 저장한다.
        <ul>
          <li>public registry : 도커 허브</li>
          <li>private registry : 나중에 알아보자..</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>컨테이너
    <ul>
      <li>이미지에서 실행이 되는 단위</li>
    </ul>
  </li>
</ul>

<h2 id="도커-설치">도커 설치</h2>

<ul>
  <li>
    <p>정식 릴리즈 된 도커의 최신 버전을 다운받는다!</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-s</span> https://get.docker.com | <span class="nb">sudo </span>sh
</code></pre></div>    </div>
  </li>
  <li>도커는 기본적으로 root 권한이 필요합니다! 사용하는 사용자를 docker 그룹에 추가해줍시다!
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>usermod <span class="nt">-aG</span> docker <span class="nv">$USER</span> <span class="c"># 현재 접속 중인 사용자에게 원한을 준다</span>
<span class="nb">sudo </span>usermod <span class="nt">-aG</span> docker user <span class="c"># user 사용자에게 권한주기</span>
</code></pre></div>    </div>
  </li>
  <li>서비스가 끝나면 정상설치가 되었는지 확인 해 봅니다.
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker <span class="nt">-v</span>
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="도커의-기본-명령어들">도커의 기본 명령어들</h2>

<ul>
  <li>도커를 실행하는 명령어는 다음과 같습니다.
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="o">[</span>OPTIONS] IMAGE[:TAG|@DIGEST] <span class="o">[</span>COMMAND] <span class="o">[</span>ARG...]
</code></pre></div>    </div>
    <ul>
      <li>다음은 run 시에 자주 사용하는 옵션입니다.
|옵션|설명|
|:—:|:—:|
|-d|detached mode. 백그라운드모드를 의미|
|-p|호스트와 컨테이너의 포트를 연결(포워딩)|
|-v|호스트와 컨테이너의 디렉토리를 연결(마운트)(볼륨)|
|-e|컨테이너 내에서 사용할 환경변수를 설정함.|
|-name|컨테이너의 이름을 설정|
|-rm|컨테이너의 프로세스가 종료될 시 자동제거|
|-it|터미널 키보드 system.in 옵션|
|-link|컨테이너를 연결한다 ([컨테이너명:별칭])|</li>
    </ul>
  </li>
</ul>
:ET