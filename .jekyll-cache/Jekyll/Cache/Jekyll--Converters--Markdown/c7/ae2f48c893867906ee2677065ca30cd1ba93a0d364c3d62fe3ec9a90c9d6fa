I"a<h3 id="2xn-타일-문제">2xn 타일 문제</h3>

<ul>
  <li>
    <p>가로 길이가 2이고 세로의 길이가 1인 직사각형모양의 타일이 있습니다. 이 직사각형 타일을 이용하여 세로의 길이가 2이고 가로의 길이가 n인 바닥을 가득 채우려고 합니다. 타일을 채울 때는 다음과 같이 2가지 방법이 있습니다.</p>

    <ul>
      <li>타일을 가로로 배치 하는 경우</li>
      <li>타일을 세로로 배치 하는 경우</li>
      <li>예를들어서 n이 7인 직사각형은 다음과 같이 채울 수 있습니다.<br />
<img src="https://user-images.githubusercontent.com/37994634/104123669-f0c80080-538f-11eb-877c-c24f377e3480.png" alt="image" />
<br /></li>
    </ul>
  </li>
  <li>
    <p>직사각형의 가로의 길이 n이 매개변수로 주어질 때, 이 직사각형을 채우는 방법의 수를 return 하는 solution 함수를 완성해주세요.</p>
  </li>
  <li>
    <p>제한사항</p>
    <ul>
      <li>가로의 길이 n은 60,000이하의 자연수 입니다.</li>
      <li>경우의 수가 많아 질 수 있으므로, 경우의 수를 1,000,000,007으로 나눈 나머지를 return해주세요.</li>
    </ul>
  </li>
</ul>

<h3 id="코드">코드</h3>

<ul>
  <li><code class="language-plaintext highlighter-rouge">풀이</code> : n에 따라 늘어나는 직사각형의 경우의 수를 알아보게 되면 fibonacci 수열로 늘어나게 된다. 따라서 피보나치 수를 구하면 되는 문제이다.</li>
</ul>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">prev1</span><span class="p">,</span> <span class="n">prev2</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span><span class="mi">1</span>

    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
        <span class="n">temp</span> <span class="o">=</span> <span class="n">prev2</span>
        <span class="n">prev2</span> <span class="o">=</span> <span class="n">prev1</span> <span class="o">+</span> <span class="n">prev2</span>
        <span class="n">prev1</span> <span class="o">=</span> <span class="n">temp</span>

    <span class="k">return</span> <span class="n">prev2</span> <span class="o">%</span> <span class="mi">1000000007</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">n</span><span class="o">=</span><span class="mi">0</span>
    <span class="k">print</span><span class="p">(</span><span class="n">solution</span><span class="p">(</span><span class="n">n</span><span class="p">))</span>
</code></pre></div></div>
:ET